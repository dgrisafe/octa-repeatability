glc_sus_dx = "Glaucoma Suspect Diagnosis",
glc_dx = "Glaucoma Diagnosis, Ordinal",
glc_dx_bin = "Glaucoma Diagnosis, Binary",
surg_proc_glaucoma = "Surgical Procedure for Glaucoma",
surg_proc_catextract = "Surgical Procedure for Cataract Extraction",
# OCTA Variables
eyeid = "Eye Identification",
eye_imaged = "Eye Imaged",
time_stamp = "Exam Date and Time",
name_last = "Last Name",
name_first = "First Name",
image_area = "Image Area",
image_method = "Image Method",
image_size = "Image Size",
v_diameter = "Vessel Diameter (units?)",
v_area_density = "Vessel Area Density (units?)",
v_skeleton_density = "Vessel Skeleton Density (units?)",
v_perimeter_index = "Vessel Perimeter Index (units?)",
v_complexity_index = "Vessel Complexity Index (units?)",
flow_impair_zone = "Flow Impairment Zone (units?)",
flux = "Flux (units?)",
zeiss_v_area_density = "Vessel Area Density (units?), Zeiss Commercial",
zeiss_flux = "Flux (units?), Zeiss Commercial"
)
# assign variable labels
data_dict <-  data.frame(var_labels) %>%
rownames_to_column("Variable")
# print html table
data_dict %>%
kable(col.names = c("Variable", "Label")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Ophthalmic Clinical Variables", 7, 11) %>%
pack_rows("OCT Angiography Variables", 12, 26) %>%
pack_rows("Zeiss Commercial OCT Angiography Variables", 27, 28)
# commercial data had different variable names than the remaining variables
data_octa_commercial_rename <- data_octa_commercial %>%
# remove unncessary variables
select(
ptid, female, eyeid, eye_imaged, image_area, image_size, image_method, exam_date, time_stamp,
Area_average, Flux_average
) %>%
# rename commercial variables
rename(
zeiss_v_area_density = Area_average,
zeiss_flux = Flux_average
)
# function to rename OCTA variables for internal scoring
rename_octa_vars <- function(df){
df %>%
# rename variables in existing format
rename(
v_diameter = starts_with("Vessel Diameter"),
v_area_density = starts_with("Vessel Area Density"),
v_skeleton_density = starts_with("Vessel Skeleton Density"),
v_perimeter_index = starts_with("Vessel Perimeter Index"),
v_complexity_index = starts_with("Vessel Complexity Index"),
flow_impair_zone = starts_with("Flow Impiarment Zone"),
flux = starts_with("Flux")
)
}
data_octa_global_rename <- rename_octa_vars(data_octa_global) %>%
# add the commercial global variables to the global dataset
left_join(
by = c("ptid", "eyeid", "time_stamp"),
y = data_octa_commercial_rename %>% select(ptid, eyeid, time_stamp, zeiss_v_area_density, zeiss_flux)
) %>%
# add sociodemographic information
left_join(y = data_sociodem_long, by = c("ptid", "female", "eye_imaged"))
data_octa_annulus_rename <- rename_octa_vars(data_octa_annulus)
# data_octa_hemifield_rename <- rename_octa_vars(data_octa_hemifield)
# data_octa_quadrant_rename <- rename_octa_vars(data_octa_quadrant)
# data_octa_sector_rename <- rename_octa_vars(data_octa_sector)
# data_octa_clockhour_rename <- rename_octa_vars(data_octa_clockhour)
# check out the renamed datasets
# data_octa_global_rename %>% glimpse
# data_octa_annulus_rename %>% glimpse
# match variable labels with variable names in dataframe
label(data_octa_global_rename) <- as.list(var_labels[match(names(data_octa_global_rename), names(var_labels))])
label(data_octa_annulus_rename) <- as.list(var_labels[match(names(data_octa_annulus_rename), names(var_labels))])
# label(data_octa_hemifield_rename) <- as.list(var_labels[match(names(data_octa_hemifield_rename), names(var_labels))])
# label(data_octa_quadrant_rename) <- as.list(var_labels[match(names(data_octa_quadrant_rename), names(var_labels))])
# label(data_octa_sector_rename) <- as.list(var_labels[match(names(data_octa_sector_rename), names(var_labels))])
# label(data_octa_clockhour_rename) <- as.list(var_labels[match(names(data_octa_clockhour_rename), names(var_labels))])
# function that gets just one eye
get_1eye <- function(df){
# set the seed so working with a consistent dataset when randomly sampling left or right eye
set.seed(123456)
# select random 1 eye per person
select_1eye <- df %>%
# get 1 eyeid
group_by(ptid, eyeid) %>% sample_n(1) %>% select(ptid, eyeid) %>% ungroup() %>%
# sample 1 eye per individual
group_by(ptid) %>% sample_n(1) %>% ungroup() %>% select(eyeid)
# subset just the eyes in the selection above
df %>%
left_join(x = select_1eye, by = "eyeid")
}
# get_1eye(data_octa_global_rename) %>% glimpse
# Intra-Visit Data: create a dataset that selects only repeat measurements per day
get_intra <- function(df){
df %>%
# create variable that indicates when there is a repeat measurement on the same day for each eye
add_count(ptid, eye_imaged, exam_date, name = "n_msr_day") %>%
filter(n_msr_day > 1) %>%
# now that all the days with single measurements have been excluded, pick the first date with multiple measurements
group_by(ptid, eye_imaged) %>%
filter(exam_date == min(exam_date)) %>%
# create an indicator variable that shows the order of measurements
mutate(order_obs = seq(n())) %>%
ungroup() %>%
# create an indicator variable that shows the order of measurements
group_by(ptid, eye_imaged) %>%
mutate(order_obs = seq(n())) %>%
ungroup()
}
# create intra dataset for global data
data_octa_global_intra <- data_octa_global_rename %>%
get_1eye() %>%
get_intra()
# Inter-Visit Data: create a dataset that selects the first measurement per day for each eye; there are no repeat measurements per day
get_inter <- function(df){
df %>%
group_by(ptid, eye_imaged, exam_date) %>%
top_n(n = -1, wt = time_stamp) %>%
ungroup() %>%
# create an indicator variable that shows the order of measurements
group_by(ptid, eye_imaged) %>%
mutate(order_obs = seq(n())) %>%
ungroup()
}
# create inter dataset for global data
data_octa_global_inter <- data_octa_global_rename %>%
get_1eye() %>%
get_inter()
data.frame(
dataset = c(
"Intra-Visit",
"Inter-Visit"
),
#number of participants
n_participants = c(
data_octa_global_intra %>% group_by(ptid) %>% summarise(n()) %>% nrow(),
data_octa_global_inter %>% group_by(ptid) %>% summarise(n()) %>% nrow()
),
#number of eyes
n_eyes = c(
data_octa_global_intra %>% group_by(ptid, eye_imaged) %>% summarise(n()) %>% nrow(),
data_octa_global_inter %>% group_by(ptid, eye_imaged) %>% summarise(n()) %>% nrow()
),
# number of measurements
n_measurements = c(
data_octa_global_intra %>% nrow(),
data_octa_global_inter %>% nrow()
)
) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
pack_rows("Global Data", 1, 2)
print_table1 <- function(df){
# variables to be included
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx",
"dr_dx", "glc_sus_dx", "glc_dx", "surg_proc_glaucoma", "surg_proc_catextract",
"eye_imaged", "image_area", "image_method", "image_size",
"v_diameter", "v_area_density", "zeiss_v_area_density", "v_skeleton_density", "v_perimeter_index", "v_complexity_index",
"flow_impair_zone", "flux", "zeiss_flux"
)
# variables not included
# "eyeid", "ptid", "name_last", "name_first", "time_stamp", "exam_date"
# factor variables
catVars_table1 <- c("female", "eye_imaged", "image_area", "image_method", "image_size")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>% select(Vars_table1, "glc_dx_bin") %>% mutate(
age = as.double(age),
v_diameter = as.double(v_diameter),
v_area_density = as.double(v_area_density),
zeiss_v_area_density = as.double(zeiss_v_area_density),
v_skeleton_density = as.double(v_skeleton_density),
v_perimeter_index = as.double(v_perimeter_index),
v_complexity_index = as.double(v_complexity_index),
flow_impair_zone = as.double(flow_impair_zone),
flux = as.double(flux),
zeiss_flux = as.double(zeiss_flux)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
pack_rows("Surgical Procedure for Glaucoma", 18, 22) %>%
pack_rows("Surgical Procedure for Cataract Extraction", 23, 27) %>%
pack_rows("Image Specifications", 28, 31) %>%
pack_rows("OCT Angiography Variables", 32, 40)
}
# print_table1(data_octa_global_intra)
print_table1(data_octa_global_intra)
print_table1 <- function(df){
# variables to be included
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx",
"dr_dx", "glc_sus_dx", "glc_dx", "surg_proc_glaucoma", "surg_proc_catextract",
"eye_imaged", "image_area", "image_method", "image_size",
"v_diameter", "v_area_density", "zeiss_v_area_density", "v_skeleton_density", "v_perimeter_index", "v_complexity_index",
"flow_impair_zone", "flux", "zeiss_flux"
)
# variables not included
# "eyeid", "ptid", "name_last", "name_first", "time_stamp", "exam_date"
# factor variables
catVars_table1 <- c("female", "eye_imaged", "image_area", "image_method", "image_size")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>% select(Vars_table1, "glc_dx_bin") %>% mutate(
age = as.double(age),
v_diameter = as.double(v_diameter),
v_area_density = as.double(v_area_density),
zeiss_v_area_density = as.double(zeiss_v_area_density),
v_skeleton_density = as.double(v_skeleton_density),
v_perimeter_index = as.double(v_perimeter_index),
v_complexity_index = as.double(v_complexity_index),
flow_impair_zone = as.double(flow_impair_zone),
flux = as.double(flux),
zeiss_flux = as.double(zeiss_flux)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
pack_rows("Surgical Procedure for Glaucoma", 18, 22) %>%
pack_rows("Surgical Procedure for Cataract Extraction", 23, 27) %>%
pack_rows("Image Specifications", 28, 31) %>%
pack_rows("OCT Angiography Variables", 32, 40)
}
print_table1(data_octa_global_intra)
print_table1 <- function(df){
# variables to be included
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx",
"dr_dx", "glc_sus_dx", "glc_dx", "surg_proc_glaucoma", "surg_proc_catextract",
"eye_imaged", "image_area", "image_method", "image_size",
"v_diameter", "v_area_density", "zeiss_v_area_density", "v_skeleton_density", "v_perimeter_index", "v_complexity_index",
"flow_impair_zone", "flux", "zeiss_flux"
)
# variables not included
# "eyeid", "ptid", "name_last", "name_first", "time_stamp", "exam_date"
# factor variables
catVars_table1 <- c("female", "eye_imaged", "image_area", "image_method", "image_size")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>% select(Vars_table1, "glc_dx_bin") %>% mutate(
age = as.double(age),
v_diameter = as.double(v_diameter),
v_area_density = as.double(v_area_density),
zeiss_v_area_density = as.double(zeiss_v_area_density),
v_skeleton_density = as.double(v_skeleton_density),
v_perimeter_index = as.double(v_perimeter_index),
v_complexity_index = as.double(v_complexity_index),
flow_impair_zone = as.double(flow_impair_zone),
flux = as.double(flux),
zeiss_flux = as.double(zeiss_flux)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
pack_rows("Glaucoma Diagnosis, Ordinal", 18, 22) %>%
pack_rows("Surgical Procedure for Glaucoma", 23, 27) %>%
pack_rows("Surgical Procedure for Cataract Extraction", 28, 32) %>%
pack_rows("Image Specifications", 33, 36) %>%
pack_rows("OCT Angiography Variables", 37, 45)
}
print_table1(data_octa_global_intra)
# function to get table 1 for individual people, no repeated measurements
print_table1_people <- function(df){
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx"
)
# factor variables
catVars_table1 <- c("female", "htn_dx", "dm_dx", "nro_dx")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>%
select(Vars_table1, "glc_dx_bin") %>%
mutate(
age = as.double(age)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6)
# pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
# pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
# pack_rows("Glaucoma Diagnosis, Ordinal", 18, 22) %>%
# pack_rows("Surgical Procedure for Glaucoma", 23, 27) %>%
# pack_rows("Surgical Procedure for Cataract Extraction", 28, 32) %>%
# pack_rows("Image Specifications", 33, 36) %>%
# pack_rows("OCT Angiography Variables", 37, 45)
#
}
data_octa_global_intra %>% top_n(n = 1) %>% print_table1_people()
# function to get table 1 for all, repeated measurements
print_table1_measure <- function(df){
# variables to be included
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx",
"dr_dx", "glc_sus_dx", "glc_dx", "surg_proc_glaucoma", "surg_proc_catextract",
"eye_imaged", "image_area", "image_method", "image_size",
"v_diameter", "v_area_density", "zeiss_v_area_density", "v_skeleton_density", "v_perimeter_index", "v_complexity_index",
"flow_impair_zone", "flux", "zeiss_flux"
)
# variables not included
# "eyeid", "ptid", "name_last", "name_first", "time_stamp", "exam_date"
# factor variables
catVars_table1 <- c("female", "eye_imaged", "image_area", "image_method", "image_size")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>% select(Vars_table1, "glc_dx_bin") %>% mutate(
age = as.double(age),
v_diameter = as.double(v_diameter),
v_area_density = as.double(v_area_density),
zeiss_v_area_density = as.double(zeiss_v_area_density),
v_skeleton_density = as.double(v_skeleton_density),
v_perimeter_index = as.double(v_perimeter_index),
v_complexity_index = as.double(v_complexity_index),
flow_impair_zone = as.double(flow_impair_zone),
flux = as.double(flux),
zeiss_flux = as.double(zeiss_flux)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
pack_rows("Glaucoma Diagnosis, Ordinal", 18, 22) %>%
pack_rows("Surgical Procedure for Glaucoma", 23, 27) %>%
pack_rows("Surgical Procedure for Cataract Extraction", 28, 32) %>%
pack_rows("Image Specifications", 33, 36) %>%
pack_rows("OCT Angiography Variables", 37, 45)
}
# print_table1(data_octa_global_intra)
# function to get table 1 for individual people, no repeated measurements
print_table1_people <- function(df){
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx"
)
# factor variables
catVars_table1 <- c("female", "htn_dx", "dm_dx", "nro_dx")
df_table1 <- df %>%
# select the first observation per person
group_by(ptid) %>%
top_n(n = 1) %>%
%>% ungroup %>%
# function to get table 1 for individual people, no repeated measurements
print_table1_people <- function(df){
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx"
)
# factor variables
catVars_table1 <- c("female", "htn_dx", "dm_dx", "nro_dx")
df_table1 <- df %>%
# select the first observation per person
group_by(ptid) %>%
top_n(n = 1) %>%
ungroup() %>%
# add in strata variable
select(Vars_table1, "glc_dx_bin") %>%
# format doubles so not categorical
mutate(age = as.double(age))
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6)
}
# function to get table 1 for all, repeated measurements
print_table1_measure <- function(df){
# variables to be included
Vars_table1 <- c(
"age", "female",
"htn_dx", "dm_dx", "nro_dx",
"dr_dx", "glc_sus_dx", "glc_dx", "surg_proc_glaucoma", "surg_proc_catextract",
"eye_imaged", "image_area", "image_method", "image_size",
"v_diameter", "v_area_density", "zeiss_v_area_density", "v_skeleton_density", "v_perimeter_index", "v_complexity_index",
"flow_impair_zone", "flux", "zeiss_flux"
)
# variables not included
# "eyeid", "ptid", "name_last", "name_first", "time_stamp", "exam_date"
# factor variables
catVars_table1 <- c("female", "eye_imaged", "image_area", "image_method", "image_size")
# exclude the following from table1: -SID, -Target, -Judge, -Date, -Meds, -Sx, -GLC
df_table1 <- df %>% select(Vars_table1, "glc_dx_bin") %>% mutate(
age = as.double(age),
v_diameter = as.double(v_diameter),
v_area_density = as.double(v_area_density),
zeiss_v_area_density = as.double(zeiss_v_area_density),
v_skeleton_density = as.double(v_skeleton_density),
v_perimeter_index = as.double(v_perimeter_index),
v_complexity_index = as.double(v_complexity_index),
flow_impair_zone = as.double(flow_impair_zone),
flux = as.double(flux),
zeiss_flux = as.double(zeiss_flux)
)
## export table 1 to html
CreateTableOne(data = df_table1, vars = Vars_table1, factorVars = catVars_table1, strata = "glc_dx_bin") %>%
print(exact = "stage", quote = FALSE, noSpaces = F, printToggle = F, varLabels = T) %>%
kableone(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Diabetic Retinopathy Diagnosis", 7, 12) %>%
pack_rows("Glaucoma Suspect Diagnosis", 13, 17) %>%
pack_rows("Glaucoma Diagnosis, Ordinal", 18, 22) %>%
pack_rows("Surgical Procedure for Glaucoma", 23, 27) %>%
pack_rows("Surgical Procedure for Cataract Extraction", 28, 32) %>%
pack_rows("Image Specifications", 33, 36) %>%
pack_rows("OCT Angiography Variables", 37, 45)
}
# print_table1(data_octa_global_intra)
print_table1_people(data_octa_global_intra)
var_labels <- c(
ptid = "Patient Identification",
# sociodemographic variables
age = "Age",
female = "Female Sex",
htn_dx = "Hypertension Diagnosis",
dm_dx = "Diabetes Mellitus Diagnosis",
nro_dx = "Optic Neuropathy",
# eye clinical variables
dr_dx = "Diabetic Retinopathy Diagnosis",
glc_sus_dx = "Glaucoma Suspect Diagnosis",
glc_dx = "Glaucoma Diagnosis, Ordinal",
glc_dx_bin = "Glaucoma Diagnosis, Binary",
surg_proc_glaucoma = "Surgical Procedure for Glaucoma",
surg_proc_catextract = "Surgical Procedure for Cataract Extraction",
# OCTA Variables
eyeid = "Eye Identification",
eye_imaged = "Eye Imaged",
time_stamp = "Exam Date and Time",
name_last = "Last Name",
name_first = "First Name",
image_area = "Image Area",
image_method = "Image Method",
image_size = "Image Size",
v_diameter = "Vessel Diameter (units?)",
v_area_density = "Vessel Area Density (units?)",
v_skeleton_density = "Vessel Skeleton Density (units?)",
v_perimeter_index = "Vessel Perimeter Index (units?)",
v_complexity_index = "Vessel Complexity Index (units?)",
flow_impair_zone = "Flow Impairment Zone (units?)",
flux = "Flux (units?)",
zeiss_v_area_density = "Vessel Area Density (units?), Zeiss Commercial",
zeiss_flux = "Flux (units?), Zeiss Commercial"
)
# assign variable labels
data_dict <-  data.frame(var_labels) %>%
rownames_to_column("Variable")
# print html table
data_dict %>%
kable(col.names = c("Variable", "Label")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
pack_rows("Sociodemographic Variables", 2, 3) %>%
pack_rows("Systemic Clinical Variables", 4, 6) %>%
pack_rows("Ophthalmic Clinical Variables", 7, 12) %>%
pack_rows("OCT Angiography Variables", 13, 29)
